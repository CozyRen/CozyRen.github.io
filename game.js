// =================== –õ—é–±–æ–≤–Ω–∞—è –∏–≥—Ä–∞ ===================
function initLoveGame() {
  console.log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª—é–±–æ–≤–Ω–æ–π –∏–≥—Ä—ã');
  
  // –ü–æ–ª—É—á–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏–≥—Ä—ã
  const gameArea = document.getElementById('game-area');
  const startGameBtn = document.getElementById('start-game');
  const restartGameBtn = document.getElementById('restart-game');
  const gameScoreDisplay = document.getElementById('game-score');
  const gameTimeDisplay = document.getElementById('game-time');
  const finalScoreDisplay = document.getElementById('final-score');
  const gameStart = document.getElementById('game-start');
  const gameEnd = document.getElementById('game-end');
  
  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–∞ —Å—á–µ—Ç–∞
  if (gameScoreDisplay) {
    console.log('–≠–ª–µ–º–µ–Ω—Ç —Å—á–µ—Ç–∞ –Ω–∞–π–¥–µ–Ω:', gameScoreDisplay);
  } else {
    console.error('–≠–ª–µ–º–µ–Ω—Ç —Å—á–µ—Ç–∞ (game-score) –Ω–µ –Ω–∞–π–¥–µ–Ω!');
    // –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π —ç–ª–µ–º–µ–Ω—Ç
    const scoreContainer = document.querySelector('.game-score');
    if (scoreContainer) {
      console.log('–ù–∞—à–ª–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å—á–µ—Ç–∞:', scoreContainer);
      // –ú–æ–∂–Ω–æ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–æ–∑–¥–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    }
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
  if (!gameArea) {
    console.error('–≠–ª–µ–º–µ–Ω—Ç –∏–≥—Ä–æ–≤–æ–π –æ–±–ª–∞—Å—Ç–∏ (game-area) –Ω–µ –Ω–∞–π–¥–µ–Ω!');
    return;
  }
  
  if (!startGameBtn) {
    console.error('–ö–Ω–æ–ø–∫–∞ –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã (start-game) –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!');
    // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É, —Ç–∞–∫ –∫–∞–∫ –∫–Ω–æ–ø–∫–∞ —Ä–µ—Å—Ç–∞—Ä—Ç–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–Ω–∞
  } else {
    console.log('–ö–Ω–æ–ø–∫–∞ start-game –Ω–∞–π–¥–µ–Ω–∞');
  }
  
  console.log('–û—Å–Ω–æ–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏–≥—Ä—ã –Ω–∞–π–¥–µ–Ω—ã');
  
  // –ò–≥—Ä–æ–≤—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
  let score = 0;
  let timeLeft = 18;
  let gameInterval;
  let heartCreateInterval;
  let speedUpInterval;
  let isGameRunning = false;
  let recordScore = localStorage.getItem('loveGameRecord') || 0;
  let unlockedGifts = JSON.parse(localStorage.getItem('unlockedGifts')) || [];
  
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–≥—Ä—ã
  let heartCreationSpeed = 1000; // –£–º–µ–Ω—å—à–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É –ø–æ—è–≤–ª–µ–Ω–∏–µ–º —Å–µ—Ä–¥–µ—á–µ–∫ (–±—ã–ª–æ 1800)
  let minHeartCreationSpeed = 700; // –£–º–µ–Ω—å—à–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª (–±—ã–ª–æ 1000)
  let fallingSpeed = { min: 5, max: 8 }; // –ï—â–µ –±–æ–ª—å—à–µ –∑–∞–º–µ–¥–ª—è–µ–º –ø–∞–¥–µ–Ω–∏–µ —Å–µ—Ä–¥–µ—á–µ–∫
  let specialHeartChance = 0.2; // 20% –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –æ—Å–æ–±–æ–≥–æ —Å–µ—Ä–¥—Ü–∞
  let quickHeartChance = 0.25; // 25% –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –±—ã—Å—Ç—Ä–æ–≥–æ —Å–µ—Ä–¥—Ü–∞ (–Ω–æ–≤–æ–≥–æ —Ç–∏–ø–∞)
  let heartTypes = ['‚ù§Ô∏è', 'üíñ', 'üíó', 'üíò', 'üíù', 'üíï']; // –¢–∏–ø—ã –æ–±—ã—á–Ω—ã—Ö —Å–µ—Ä–¥–µ—Ü
  let specialHeartTypes = ['üíñ', 'üíù']; // –¢–∏–ø—ã –æ—Å–æ–±—ã—Ö —Å–µ—Ä–¥–µ—Ü
  let quickHeartTypes = ['üíì']; // –¢–∏–ø—ã –±—ã—Å—Ç—Ä—ã—Ö –º–∞–ª–µ–Ω—å–∫–∏—Ö —Å–µ—Ä–¥–µ—Ü
  
  // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ—Ä–æ–≥–æ–≤ –¥–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–æ–¥–∞—Ä–∫–æ–≤
  const giftThresholds = [
    { score: 10, giftId: 'kiss', title: '–ü–æ—Ü–µ–ª—É–π' },
    { score: 15, giftId: 'compliment', title: '–ö–æ–º–ø–ª–∏–º–µ–Ω—Ç' },
    { score: 25, giftId: 'hug', title: '–û–±–Ω–∏–º–∞—à–∫–∏' },
    { score: 30, giftId: 'food', title: '–ï–¥–∞' },
    { score: 35, giftId: 'story', title: '–ò—Å—Ç–æ—Ä–∏—è' },
    { score: 45, giftId: 'teddy', title: '–ú—è–≥–∫–∞—è –∏–≥—Ä—É—à–∫–∞' }
  ];
  
  // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ä–µ–∫–æ—Ä–¥, –µ—Å–ª–∏ –µ—Å—Ç—å —ç–ª–µ–º–µ–Ω—Ç
  const gameRecordDisplay = document.getElementById('game-record');
  if (gameRecordDisplay) {
    gameRecordDisplay.textContent = recordScore;
  }
  
  // –°–æ–∑–¥–∞–µ–º –∞—É–¥–∏–æ —ç—Ñ—Ñ–µ–∫—Ç—ã
  const createAudio = (src) => {
    const audio = new Audio();
    audio.src = src;
    audio.volume = 0.3;
    return audio;
  };
  
  // –≠–º—É–ª–∏—Ä—É–µ–º –∑–≤—É–∫–æ–≤—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∑–¥–µ—Å—å –±—ã–ª–∏ –±—ã –ø—É—Ç–∏ –∫ –∑–≤—É–∫–æ–≤—ã–º —Ñ–∞–π–ª–∞–º)
  const heartClickSound = {
    play: function() {
      // –≠–º—É–ª—è—Ü–∏—è –∑–≤—É–∫–∞ –∫–ª–∏–∫–∞ –ø–æ —Å–µ—Ä–¥–µ—á–∫—É
      try {
        const context = new (window.AudioContext || window.webkitAudioContext)();
        const oscillator = context.createOscillator();
        const gain = context.createGain();
        
        oscillator.type = 'sine';
        oscillator.frequency.value = 440;
        gain.gain.value = 0.1;
        
        oscillator.connect(gain);
        gain.connect(context.destination);
        
        oscillator.start(0);
        gain.gain.exponentialRampToValueAtTime(0.00001, context.currentTime + 0.5);
        
        setTimeout(() => {
          oscillator.stop();
        }, 500);
      } catch (e) {
        console.log('–ó–≤—É–∫–æ–≤–æ–π —ç—Ñ—Ñ–µ–∫—Ç –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è');
      }
    }
  };
  
  const specialHeartSound = {
    play: function() {
      // –≠–º—É–ª—è—Ü–∏—è –∑–≤—É–∫–∞ –∫–ª–∏–∫–∞ –ø–æ –æ—Å–æ–±–æ–º—É —Å–µ—Ä–¥–µ—á–∫—É
      try {
        const context = new (window.AudioContext || window.webkitAudioContext)();
        const oscillator = context.createOscillator();
        const gain = context.createGain();
        
        oscillator.type = 'triangle';
        oscillator.frequency.value = 660;
        gain.gain.value = 0.1;
        
        oscillator.connect(gain);
        gain.connect(context.destination);
        
        oscillator.start(0);
        gain.gain.exponentialRampToValueAtTime(0.00001, context.currentTime + 0.8);
        
        setTimeout(() => {
          oscillator.stop();
        }, 800);
      } catch (e) {
        console.log('–ó–≤—É–∫–æ–≤–æ–π —ç—Ñ—Ñ–µ–∫—Ç –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è');
      }
    }
  };
  
  const quickHeartSound = {
    play: function() {
      // –≠–º—É–ª—è—Ü–∏—è –∑–≤—É–∫–∞ –∫–ª–∏–∫–∞ –ø–æ –±—ã—Å—Ç—Ä–æ–º—É —Å–µ—Ä–¥–µ—á–∫—É
      try {
        const context = new (window.AudioContext || window.webkitAudioContext)();
        const oscillator = context.createOscillator();
        const gain = context.createGain();
        
        oscillator.type = 'square';
        oscillator.frequency.value = 550;
        gain.gain.value = 0.1;
        
        oscillator.connect(gain);
        gain.connect(context.destination);
        
        oscillator.start(0);
        gain.gain.exponentialRampToValueAtTime(0.00001, context.currentTime + 0.4);
        
        setTimeout(() => {
          oscillator.stop();
        }, 400);
      } catch (e) {
        console.log('–ó–≤—É–∫–æ–≤–æ–π —ç—Ñ—Ñ–µ–∫—Ç –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è');
      }
    }
  };
  
  // –ù–∞—á–∞–ª–æ –∏–≥—Ä—ã
  function startGame() {
    console.log('–ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏–≥—Ä–æ–≤–∞—è –æ–±–ª–∞—Å—Ç—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if (!gameArea) {
      console.error('–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –∏–≥—Ä—É - –∏–≥—Ä–æ–≤–∞—è –æ–±–ª–∞—Å—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
      return;
    }
    
    if (isGameRunning) {
      console.log('–ò–≥—Ä–∞ —É–∂–µ –∑–∞–ø—É—â–µ–Ω–∞, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º...');
      return;
    }
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∏–≥—Ä–æ–≤–æ–π –æ–±–ª–∞—Å—Ç–∏
    initGameArea();
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    score = 0;
    timeLeft = 18;
    isGameRunning = true;
    heartCreationSpeed = 1000; // –£–º–µ–Ω—å—à–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É –ø–æ—è–≤–ª–µ–Ω–∏–µ–º —Å–µ—Ä–¥–µ—á–µ–∫ (–±—ã–ª–æ 1800)
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    if (gameScoreDisplay) gameScoreDisplay.textContent = score;
    if (gameTimeDisplay) gameTimeDisplay.textContent = timeLeft;
    
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –≤—ã–∑–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—á–µ—Ç–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    updateScore();
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–ª–∞–¥–∫—É –∞–Ω–∏–º–∞—Ü–∏–∏
    const debugAnimations = true;
    if (debugAnimations) {
      console.log('–í–∫–ª—é—á–µ–Ω–∞ –æ—Ç–ª–∞–¥–∫–∞ –∞–Ω–∏–º–∞—Ü–∏–π');
      // –î–æ–±–∞–≤–∏–º —Å–ª—É—à–∞—Ç–µ–ª—å –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤—Å–µ—Ö –∞–Ω–∏–º–∞—Ü–∏–π –≤ –¥–æ–∫—É–º–µ–Ω—Ç–µ
      document.addEventListener('animationstart', function(e) {
        console.log('–ó–∞–ø—É—Å–∫ –∞–Ω–∏–º–∞—Ü–∏–∏:', e.animationName, '–Ω–∞ —ç–ª–µ–º–µ–Ω—Ç–µ:', e.target);
      });
      
      document.addEventListener('animationend', function(e) {
        console.log('–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∞–Ω–∏–º–∞—Ü–∏–∏:', e.animationName, '–Ω–∞ —ç–ª–µ–º–µ–Ω—Ç–µ:', e.target);
      });
    }
    
    // –ò–Ω—Ç–µ—Ä–≤–∞–ª –¥–ª—è –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—á–µ—Ç–∞ –Ω–∞ —Å–ª—É—á–∞–π –ø—Ä–æ–±–ª–µ–º —Å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
    let scoreUpdateInterval = setInterval(() => {
      if (!isGameRunning) {
        clearInterval(scoreUpdateInterval);
        return;
      }
      console.log('–ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç–∞:', score);
      updateScore();
    }, 1000);
    
    // –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–µ—Ä–¥—Ü–∞
    const existingHearts = gameArea.querySelectorAll('.game-heart');
    existingHearts.forEach(heart => {
      if (heart.parentNode) {
        heart.parentNode.removeChild(heart);
      }
    });
    
    // –°–∫—Ä—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–≥—Ä–æ–≤—É—é –æ–±–ª–∞—Å—Ç—å
    if (gameStart) {
      gameStart.classList.add('hidden');
    }
    
    gameArea.classList.add('game-started');
    document.body.classList.add('game-active');
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –æ—Ç—Å—á–µ—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏
    gameInterval = setInterval(() => {
      timeLeft--;
      
      if (gameTimeDisplay) {
        gameTimeDisplay.textContent = timeLeft;
        
        // –î–æ–±–∞–≤–ª—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç, –∫–æ–≥–¥–∞ –≤—Ä–µ–º–µ–Ω–∏ –º–∞–ª–æ
        if (timeLeft <= 5) {
          gameTimeDisplay.classList.add('time-running-out');
        } else {
          gameTimeDisplay.classList.remove('time-running-out');
        }
      }
      
      // –ó–∞–≤–µ—Ä—à–∞–µ–º –∏–≥—Ä—É, –∫–æ–≥–¥–∞ –≤—Ä–µ–º—è –∏—Å—Ç–µ–∫–ª–æ
      if (timeLeft <= 0) {
        endGame();
      }
    }, 1000);
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Ä–¥–µ—á–µ–∫ —Å –±–æ–ª–µ–µ –≤—ã—Å–æ–∫–æ–π —á–∞—Å—Ç–æ—Ç–æ–π
    heartCreateInterval = setInterval(() => {
      if (isGameRunning) {
        createHeart();
        
        // –ò–Ω–æ–≥–¥–∞ —Å–æ–∑–¥–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —Å–µ—Ä–¥—Ü–µ –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è –ø–ª–æ—Ç–Ω–æ—Å—Ç–∏
        if (Math.random() < 0.3) {
          setTimeout(() => {
            if (isGameRunning) createHeart();
          }, 300);
        }
      }
    }, heartCreationSpeed);
    
    // –°–æ–∑–¥–∞—ë–º —Å—Ä–∞–∑—É –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ—Ä–¥–µ—Ü –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã
    for (let i = 0; i < 5; i++) {
      setTimeout(() => {
        if (isGameRunning) createHeart();
      }, i * 200);
    }
    
    // –£—Å–∫–æ—Ä—è–µ–º –ø–æ—è–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–¥–µ—á–µ–∫ —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º (–∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥)
    speedUpInterval = setInterval(() => {
      if (isGameRunning && heartCreationSpeed > minHeartCreationSpeed) {
        heartCreationSpeed = Math.max(heartCreationSpeed - 100, minHeartCreationSpeed);
        console.log('–£—Å–∫–æ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Ä–¥–µ—á–µ–∫:', heartCreationSpeed);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª —Å –Ω–æ–≤–æ–π —Å–∫–æ—Ä–æ—Å—Ç—å—é
        clearInterval(heartCreateInterval);
        heartCreateInterval = setInterval(() => {
          if (isGameRunning) {
            createHeart();
            
            // –° –∫–∞–∂–¥—ã–º —É—Å–∫–æ—Ä–µ–Ω–∏–µ–º —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —à–∞–Ω—Å –ø–æ—è–≤–ª–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Å–µ—Ä–¥—Ü–∞
            if (Math.random() < 0.4) {
              setTimeout(() => {
                if (isGameRunning) createHeart();
              }, Math.random() * 300);
            }
          }
        }, heartCreationSpeed);
      }
    }, 5000);
    
    console.log('–ò–≥—Ä–∞ –∑–∞–ø—É—â–µ–Ω–∞!');
  }
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–≥—Ä–æ–≤–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ –∏ –ø—Ä—è–º—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
  function initGameArea() {
    try {
      if (!gameArea) return;
      
      console.log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–≥—Ä–æ–≤–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞');
      
      // –î–æ–±–∞–≤–ª—è–µ–º –º–æ–±–∏–ª—å–Ω—ã–µ —Å—Ç–∏–ª–∏
      const mobileStyles = `
        .game-heart {
          cursor: pointer !important;
          touch-action: manipulation !important;
          -webkit-tap-highlight-color: transparent !important;
        }
        .game-area {
          touch-action: manipulation !important;
          -webkit-tap-highlight-color: transparent !important;
          user-select: none !important;
          -webkit-user-select: none !important;
          -moz-user-select: none !important;
          -ms-user-select: none !important;
        }
      `;
      
      // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
      const styleElement = document.createElement('style');
      styleElement.textContent = mobileStyles;
      document.head.appendChild(styleElement);
      
      // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞ –¥–ª—è —Ç–∞–∫–∏—Ö –∂–µ—Å—Ç–æ–≤, –∫–∞–∫ –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏–∏
      gameArea.addEventListener('touchmove', function(e) {
        e.preventDefault();
      }, { passive: false });
      
      // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏ –¥–≤–æ–π–Ω–æ–º —Ç–∞–ø–µ
      gameArea.addEventListener('touchend', function(e) {
        const now = Date.now();
        const lastTouch = gameArea.dataset.lastTouch || 0;
        
        if (now - lastTouch < 300) {
          e.preventDefault();
        }
        
        gameArea.dataset.lastTouch = now;
      }, { passive: false });
      
      // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é –Ω–∞ –≤—Å–µ–π –∏–≥—Ä–æ–≤–æ–π –æ–±–ª–∞—Å—Ç–∏
      gameArea.addEventListener('contextmenu', function(e) {
        e.preventDefault();
        return false;
      });
      
      // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞
      gameArea.addEventListener('selectstart', function(e) {
        e.preventDefault();
        return false;
      });
      
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
      window.onerror = function(message, source, lineno, colno, error) {
        const errorDiv = document.createElement('div');
        errorDiv.style.position = 'fixed';
        errorDiv.style.bottom = '0';
        errorDiv.style.left = '0';
        errorDiv.style.backgroundColor = 'rgba(255,0,0,0.8)';
        errorDiv.style.color = 'white';
        errorDiv.style.padding = '10px';
        errorDiv.style.zIndex = '9999';
        errorDiv.textContent = `–û—à–∏–±–∫–∞: ${message} (${source}:${lineno}:${colno})`;
        document.body.appendChild(errorDiv);
        
        // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        setTimeout(() => {
          if (errorDiv.parentNode) {
            errorDiv.parentNode.removeChild(errorDiv);
          }
        }, 5000);
        
        return true; // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
      };
      
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∏–≥—Ä–æ–≤–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞:', error);
    }
  }
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Ä–¥—Ü–∞
  function createHeart() {
    if (!gameArea || !isGameRunning) return;
    
    try {
      // –°–æ–∑–¥–∞–µ–º –±–æ–ª—å—à–µ —Å–µ—Ä–¥–µ—Ü –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ (1-2 –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö)
      const extraHearts = Math.random() < 0.5 ? 1 : 2;
      for (let i = 0; i <= extraHearts; i++) {
        // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è –≤—Ç–æ—Ä–æ–≥–æ –∏ —Ç—Ä–µ—Ç—å–µ–≥–æ —Å–µ—Ä–¥—Ü–∞
        setTimeout(() => {
          createSingleHeart();
        }, i * 100);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–µ—Ä–¥—Ü–∞:', error);
    }
  }
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–¥–Ω–æ–≥–æ —Å–µ—Ä–¥—Ü–∞
  function createSingleHeart() {
    if (!gameArea || !isGameRunning) return;
    
    try {
      // –í—ã–±–∏—Ä–∞–µ–º —Ç–∏–ø —Å–µ—Ä–¥—Ü–∞
      let heartType, isSpecial = false, isQuick = false;
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –±—É–¥–µ—Ç –ª–∏ —ç—Ç–æ –æ—Å–æ–±–æ–µ —Å–µ—Ä–¥—Ü–µ (5 –æ—á–∫–æ–≤)
      if (Math.random() < specialHeartChance) {
        // –≠—Ç–æ –æ—Å–æ–±–æ–µ —Å–µ—Ä–¥—Ü–µ
        heartType = specialHeartTypes[Math.floor(Math.random() * specialHeartTypes.length)];
        isSpecial = true;
      } 
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –±—É–¥–µ—Ç –ª–∏ —ç—Ç–æ –±—ã—Å—Ç—Ä–æ–µ —Å–µ—Ä–¥—Ü–µ (2 –æ—á–∫–∞)
      else if (Math.random() < quickHeartChance) {
        // –≠—Ç–æ –±—ã—Å—Ç—Ä–æ–µ —Å–µ—Ä–¥—Ü–µ
        heartType = quickHeartTypes[Math.floor(Math.random() * quickHeartTypes.length)];
        isQuick = true;
      } 
      // –û–±—ã—á–Ω–æ–µ —Å–µ—Ä–¥—Ü–µ (1 –æ—á–∫–æ)
      else {
        heartType = heartTypes[Math.floor(Math.random() * heartTypes.length)];
      }
      
      // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç —Å–µ—Ä–¥—Ü–∞
      const heart = document.createElement('div');
      heart.className = 'game-heart';
      heart.innerHTML = heartType;
      
      // –î–æ–±–∞–≤–ª—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
      heart.id = 'heart-' + new Date().getTime() + '-' + Math.floor(Math.random() * 1000);
      
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∏–ø —Å–µ—Ä–¥—Ü–∞ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—á–∫–æ–≤ –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
      if (isSpecial) {
        heart.classList.add('special-heart');
        heart.dataset.points = '5'; // –û—Å–æ–±–æ–µ —Å–µ—Ä–¥—Ü–µ –¥–∞–µ—Ç 5 –æ—á–∫–æ–≤
        heart.dataset.type = 'special';
      } else if (isQuick) {
        heart.classList.add('quick-heart');
        heart.dataset.points = '2'; // –ë—ã—Å—Ç—Ä–æ–µ —Å–µ—Ä–¥—Ü–µ –¥–∞–µ—Ç 2 –æ—á–∫–∞
        heart.dataset.type = 'quick';
      } else {
        heart.dataset.points = '1'; // –û–±—ã—á–Ω–æ–µ —Å–µ—Ä–¥—Ü–µ –¥–∞–µ—Ç 1 –æ—á–∫–æ
        heart.dataset.type = 'regular';
      }
      
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–ª—É—á–∞–π–Ω—É—é –Ω–∞—á–∞–ª—å–Ω—É—é –ø–æ–∑–∏—Ü–∏—é –ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏
      // –ü–æ–¥—Ö–æ–¥—è—â–∏–µ —Ä–∞–∑–º–µ—Ä—ã: –æ—Ç —Ä–∞–∑–º–µ—Ä–∞ —Å–µ—Ä–¥—Ü–∞ –¥–æ —à–∏—Ä–∏–Ω—ã –∏–≥—Ä–æ–≤–æ–π –æ–±–ª–∞—Å—Ç–∏ –º–∏–Ω—É—Å —Ä–∞–∑–º–µ—Ä —Å–µ—Ä–¥—Ü–∞
      const heartSize = isQuick ? 25 : 40; // –ú–µ–Ω—å—à–∏–π —Ä–∞–∑–º–µ—Ä –¥–ª—è –±—ã—Å—Ç—Ä—ã—Ö —Å–µ—Ä–¥–µ—Ü
      const maxLeft = gameArea.clientWidth - heartSize;
      const randomLeft = Math.random() * maxLeft;
      
      // –°—Ç–∞—Ä—Ç–æ–≤–∞—è –ø–æ–∑–∏—Ü–∏—è –Ω–µ–º–Ω–æ–≥–æ –≤—ã—à–µ –≤–µ—Ä—Ö–Ω–µ–π –≥—Ä–∞–Ω–∏—Ü—ã –∏–≥—Ä–æ–≤–æ–π –æ–±–ª–∞—Å—Ç–∏
      const startY = -heartSize - Math.random() * 50; // –°–ª—É—á–∞–π–Ω–∞—è –Ω–∞—á–∞–ª—å–Ω–∞—è –≤—ã—Å–æ—Ç–∞ –Ω–∞–¥ –∏–≥—Ä–æ–≤–æ–π –æ–±–ª–∞—Å—Ç—å—é
      
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è –Ω–∞—á–∞–ª—å–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏ –∏ —Ä–∞–∑–º–µ—Ä–∞
      heart.style.left = `${randomLeft}px`;
      heart.style.top = `${startY}px`;
      
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–µ–Ω—å—à–∏–π —Ä–∞–∑–º–µ—Ä –¥–ª—è –±—ã—Å—Ç—Ä—ã—Ö —Å–µ—Ä–¥–µ—Ü
      if (isQuick) {
        heart.style.width = `${heartSize}px`;
        heart.style.height = `${heartSize}px`;
        heart.style.fontSize = '18px';
      }
      
      // –í—ã—á–∏—Å–ª—è–µ–º —Å–∫–æ—Ä–æ—Å—Ç—å –ø–∞–¥–µ–Ω–∏—è - –±—ã—Å—Ç—Ä—ã–µ —Å–µ—Ä–¥—Ü–∞ –ø–∞–¥–∞—é—Ç –±—ã—Å—Ç—Ä–µ–µ
      let speed = isQuick ? 
                  fallingSpeed.max + Math.random() * 2 : // –ë—ã—Å—Ç—Ä—ã–µ —Å–µ—Ä–¥—Ü–∞ –ø–∞–¥–∞—é—Ç –±—ã—Å—Ç—Ä–µ–µ
                  fallingSpeed.min + Math.random() * (fallingSpeed.max - fallingSpeed.min);
                  
      // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Å–∫–æ—Ä–æ—Å—Ç—å –≤ –∞—Ç—Ä–∏–±—É—Ç –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
      heart.dataset.speed = speed;
      heart.dataset.created = new Date().toISOString();
      
      // –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–ª–∏–∫–∞ –ø–æ —Å–µ—Ä–¥—Ü—É
      const handleClick = function(e) {
        e.preventDefault();
        e.stopPropagation();
        
        console.log('–ö–ª–∏–∫ –ø–æ —Å–µ—Ä–¥—Ü—É:', heart.id, '—Ç–∏–ø:', heart.dataset.type);
        
        // –û—Ç–º–µ–Ω—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –ø–∞–¥–µ–Ω–∏—è
        heart.style.animationPlayState = 'paused';
        
        // –í—ã–∑—ã–≤–∞–µ–º —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
        handleHeartClick(e);
      };
      
      // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –∫–ª–∏–∫–∞
      heart.addEventListener('click', handleClick);
      heart.addEventListener('touchstart', handleClick, { passive: false });
      
      // –î–æ–±–∞–≤–ª—è–µ–º —Å–µ—Ä–¥—Ü–µ –≤ –∏–≥—Ä–æ–≤—É—é –æ–±–ª–∞—Å—Ç—å
      gameArea.appendChild(heart);
      
      // –ù–∞—á–∏–Ω–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –ø–∞–¥–µ–Ω–∏—è
      requestAnimationFrame(() => {
        // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –∞–Ω–∏–º–∞—Ü–∏–∏
        heart.style.animation = `fall ${8/speed}s linear forwards`;
        
        // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        console.log('–î–æ–±–∞–≤–ª–µ–Ω–æ —Å–µ—Ä–¥—Ü–µ:', heart.id, '—Ç–∏–ø:', heart.dataset.type, '—Å–∫–æ—Ä–æ—Å—Ç—å:', speed);
      });
      
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏ - —É–¥–∞–ª–∏—Ç—å —Å–µ—Ä–¥—Ü–µ, –µ—Å–ª–∏ –æ–Ω–æ –Ω–µ –±—ã–ª–æ –ø–æ–π–º–∞–Ω–æ
      heart.addEventListener('animationend', () => {
        if (heart.parentNode) {
          heart.parentNode.removeChild(heart);
          console.log('–°–µ—Ä–¥—Ü–µ —É–ø–∞–ª–æ –∏ —É–¥–∞–ª–µ–Ω–æ:', heart.id);
        }
      });
      
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–µ—Ä–¥—Ü–∞:', error);
    }
  }
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—á–µ—Ç–∞ –Ω–∞ —ç–∫—Ä–∞–Ω–µ - –ø–µ—Ä–µ–ø–∏—Å—ã–≤–∞–µ–º –±–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω–æ
  function updateScore() {
    try {
      console.log('–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç–∞ –∏–≥—Ä—ã, —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:', score);
      
      // –ù–∞—Ö–æ–¥–∏–º —ç–ª–µ–º–µ–Ω—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—á–µ—Ç–∞ —Å–≤–µ–∂–∏–º –∑–∞–ø—Ä–æ—Å–æ–º
      const scoreDisplay = document.getElementById('game-score');
      
      if (scoreDisplay) {
        console.log('–≠–ª–µ–º–µ–Ω—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—á–µ—Ç–∞ –Ω–∞–π–¥–µ–Ω, –æ–±–Ω–æ–≤–ª—è–µ–º:', score);
        scoreDisplay.textContent = score;
        
        // –î–æ–±–∞–≤–ª—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—á–µ—Ç–∞
        scoreDisplay.classList.add('score-update');
        setTimeout(() => {
          scoreDisplay.classList.remove('score-update');
        }, 300);
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–π —Å—á–µ—Ç –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        window.currentGameScore = score;
      } else {
        console.warn('–≠–ª–µ–º–µ–Ω—Ç game-score –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã');
        
        // –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —á–µ—Ä–µ–∑ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        const scoreContainer = document.querySelector('.game-score');
        if (scoreContainer) {
          console.log('–ù–∞–π–¥–µ–Ω –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å—á–µ—Ç–∞');
          const scoreSpan = scoreContainer.querySelector('span:last-child');
          if (scoreSpan) {
            console.log('–ù–∞–π–¥–µ–Ω span –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å—á–µ—Ç–∞, –æ–±–Ω–æ–≤–ª—è–µ–º:', score);
            scoreSpan.textContent = score;
            
            // –î–æ–±–∞–≤–ª—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—á–µ—Ç–∞
            scoreSpan.classList.add('score-update');
            setTimeout(() => {
              scoreSpan.classList.remove('score-update');
            }, 300);
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–π —Å—á–µ—Ç –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
            window.currentGameScore = score;
          } else {
            console.error('–ù–µ –Ω–∞–π–¥–µ–Ω —ç–ª–µ–º–µ–Ω—Ç span –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å—á–µ—Ç–∞');
          }
        } else {
          console.error('–ù–µ –Ω–∞–π–¥–µ–Ω –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å—á–µ—Ç–∞');
        }
      }
      
      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º UI
      document.body.offsetHeight; // Reflow
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫—É –ø–æ–¥–∞—Ä–∫–æ–≤
      checkGiftUnlock(score);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—á–µ—Ç–∞:', error);
    }
  }
  
  // –¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ —Å–µ—Ä–¥—Ü—É
  function handleHeartClick(event) {
    // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Å–∫—Ä–æ–ª–ª–∞
    event.preventDefault();
    
    try {
      // –ü–æ–ª—É—á–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç —Å–µ—Ä–¥—Ü–∞
      const heart = event.currentTarget;
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –ª–∏ —É–∂–µ —ç—Ç–æ —Å–µ—Ä–¥—Ü–µ
      if (heart.dataset.processing === 'true' || heart.classList.contains('clicked')) {
        console.log('–°–µ—Ä–¥—Ü–µ —É–∂–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –∏–ª–∏ –±—ã–ª–æ –∫–ª–∏–∫–Ω—É—Ç–æ, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º');
        return;
      }
      
      // –ü–æ–º–µ—á–∞–µ–º —Å–µ—Ä–¥—Ü–µ –∫–∞–∫ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º–æ–µ - –±–ª–æ–∫–∏—Ä—É–µ–º –¥–≤–æ–π–Ω—ã–µ –∫–ª–∏–∫–∏
      heart.dataset.processing = 'true';
      heart.classList.add('clicked');
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Å–µ—Ä–¥—Ü–∞ –∏ –Ω–∞—á–∏—Å–ª—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –æ—á–∫–∏
      let pointsToAdd = parseInt(heart.dataset.points || "1");
      if (isNaN(pointsToAdd)) pointsToAdd = 1; // –ù–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ dataset.points –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
      
      // –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –∑–≤—É–∫
      if (heart.classList.contains('special-heart')) {
        specialHeartSound.play();
        console.log('–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ —Å–µ—Ä–¥—Ü–µ: +5 –æ—á–∫–æ–≤. –¢–µ–∫—É—â–∏–π —Å—á–µ—Ç:', score, '+ 5 =', score + 5);
      } else if (heart.classList.contains('quick-heart')) {
        quickHeartSound.play();
        console.log('–ë—ã—Å—Ç—Ä–æ–µ —Å–µ—Ä–¥—Ü–µ: +2 –æ—á–∫–∞. –¢–µ–∫—É—â–∏–π —Å—á–µ—Ç:', score, '+ 2 =', score + 2);
      } else {
        heartClickSound.play();
        console.log('–û–±—ã—á–Ω–æ–µ —Å–µ—Ä–¥—Ü–µ: +1 –æ—á–∫–æ. –¢–µ–∫—É—â–∏–π —Å—á–µ—Ç:', score, '+ 1 =', score + 1);
      }
      
      // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á—ë—Ç
      score += pointsToAdd;
      
      // –ó–∞–ø–∏—Å—å –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
      console.log(`–£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç –Ω–∞ ${pointsToAdd}, —Ç–∏–ø —Å–µ—Ä–¥—Ü–∞: ${heart.dataset.type}, –Ω–æ–≤—ã–π —Å—á–µ—Ç:`, score);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—á–µ—Ç–∞ —Å –ø–æ–º–æ—â—å—é —É–ª—É—á—à–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
      updateScore();
      
      // –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
      window.lastScore = score;
      window.lastHeart = heart.dataset.type;
      window.lastPoints = pointsToAdd;
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –æ—á–∫–æ–≤
      showPointsAnimation(heart);
      
      // –°–æ–∑–¥–∞—ë–º —ç—Ñ—Ñ–µ–∫—Ç —á–∞—Å—Ç–∏—Ü
      createParticles(heart);
      
      // –£–¥–∞–ª—è–µ–º —Å–µ—Ä–¥—Ü–µ –ø–æ—Å–ª–µ –Ω–µ–±–æ–ª—å—à–æ–π –∑–∞–¥–µ—Ä–∂–∫–∏, —á—Ç–æ–±—ã –∞–Ω–∏–º–∞—Ü–∏—è —É—Å–ø–µ–ª–∞ –ø—Ä–æ–∏–≥—Ä–∞—Ç—å—Å—è
      setTimeout(() => {
        if (heart.parentNode) {
          heart.parentNode.removeChild(heart);
        }
      }, 500); // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –≤—Ä–µ–º—è –¥–æ —É–¥–∞–ª–µ–Ω–∏—è –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—á–µ—Ç —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è, —á—Ç–æ–±—ã —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –æ–Ω –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∏–∑–º–µ–Ω–∏–ª—Å—è
      setTimeout(() => {
        console.log('–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—á–µ—Ç–∞ –ø–æ—Å–ª–µ –∫–ª–∏–∫–∞:', score);
        updateScore(); // –í—Ç–æ—Ä–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
      }, 100);
      
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–ª–∏–∫–∞ –ø–æ —Å–µ—Ä–¥—Ü—É:', error);
    }
  }
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –æ—á–∫–æ–≤
  function showPointsAnimation(heart) {
    try {
      if (!gameArea) return;
      
      // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ –æ—á–∫–æ–≤
      const pointsElement = document.createElement('div');
      pointsElement.classList.add('points-animation');
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–ª–∞—Å—Å –∏ —Ç–µ–∫—Å—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Å–µ—Ä–¥—Ü–∞
      if (heart.classList.contains('special-heart')) {
        pointsElement.classList.add('special-points');
        pointsElement.textContent = '+5';
      } else if (heart.classList.contains('quick-heart')) {
        pointsElement.classList.add('quick-points');
        pointsElement.textContent = '+2';
      } else {
        pointsElement.textContent = '+1';
      }
      
      // –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ —Å–º–µ—â–µ–Ω–∏–µ –¥–ª—è –±–æ–ª–µ–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ —ç—Ñ—Ñ–µ–∫—Ç–∞
      const xOffset = Math.random() * 40 - 20;
      pointsElement.style.setProperty('--x-offset', `${xOffset}px`);
      
      // –ß–µ—Ç–∫–æ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä—É–µ–º —ç–ª–µ–º–µ–Ω—Ç –æ—á–∫–æ–≤ –ø–µ—Ä–µ–¥ –ø–æ–ª—É—á–µ–Ω–∏–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç —Å–µ—Ä–¥—Ü–∞
      // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∏–º–µ—Ä–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ
      let posX = heart.offsetWidth / 2;
      let posY = 0;
      
      try {
        const heartRect = heart.getBoundingClientRect();
        const gameAreaRect = gameArea.getBoundingClientRect();
        
        posX = heartRect.left - gameAreaRect.left + heart.offsetWidth / 2;
        posY = heartRect.top - gameAreaRect.top;
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç —Å–µ—Ä–¥—Ü–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω—ã–µ:', error);
      }
      
      pointsElement.style.left = `${posX}px`;
      pointsElement.style.top = `${posY}px`;
      
      // –î–æ–±–∞–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç –Ω–∞ –∏–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ
      gameArea.appendChild(pointsElement);
      
      // –£–¥–∞–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
      setTimeout(() => {
        if (pointsElement.parentNode) {
          pointsElement.parentNode.removeChild(pointsElement);
        }
      }, 1000);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∞–Ω–∏–º–∞—Ü–∏–∏ –æ—á–∫–æ–≤:', error);
    }
  }
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —ç—Ñ—Ñ–µ–∫—Ç–∞ —á–∞—Å—Ç–∏—Ü –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ —Å–µ—Ä–¥—Ü–µ - —É–ø—Ä–æ—â—ë–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è
  function createParticles(heart) {
    if (!gameArea || !heart) return;

    // –°–æ–∑–¥–∞—ë–º –ø—Ä–æ—Å—Ç—É—é –≤—Å–ø—ã—à–∫—É –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ –≤ –º–µ—Å—Ç–µ –∫–ª–∏–∫–∞
    const flash = document.createElement('div');
    flash.classList.add('heart-flash');
    
    // –ö–æ–ø–∏—Ä—É–µ–º –ø–æ–∑–∏—Ü–∏—é –∏ —Ä–∞–∑–º–µ—Ä —Å–µ—Ä–¥—Ü–∞ –¥–ª—è –≤—Å–ø—ã—à–∫–∏
    try {
      const rect = heart.getBoundingClientRect();
      const gameRect = gameArea.getBoundingClientRect();
      
      flash.style.left = `${rect.left - gameRect.left + rect.width/2}px`;
      flash.style.top = `${rect.top - gameRect.top + rect.height/2}px`;
      
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –≤—Å–ø—ã—à–∫–∏ –±–æ–ª—å—à–µ, —á–µ–º —Å–µ—Ä–¥—Ü–µ
      flash.style.width = `${rect.width * 1.5}px`;
      flash.style.height = `${rect.height * 1.5}px`;
      
      // –ü—Ä–∏–º–µ–Ω—è–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ä–¥–µ—Ü
      if (heart.classList.contains('special-heart')) {
        flash.classList.add('special-flash');
      }
      
      // –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–ø—ã—à–∫—É –≤ –∏–≥—Ä–æ–≤—É—é –æ–±–ª–∞—Å—Ç—å
      gameArea.appendChild(flash);
      
      // –£–¥–∞–ª—è–µ–º –≤—Å–ø—ã—à–∫—É –ø–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
      setTimeout(() => {
        if (flash.parentNode) {
          flash.parentNode.removeChild(flash);
        }
      }, 500);
      
      // –°–æ–∑–¥–∞—ë–º –ø—Ä–æ—Å—Ç—ã–µ —á–∞—Å—Ç–∏—Ü—ã
      const particleCount = heart.classList.contains('special-heart') ? 6 : 4;
      
      for (let i = 0; i < particleCount; i++) {
        const particle = document.createElement('div');
        particle.classList.add('simple-particle');
        
        if (heart.classList.contains('special-heart')) {
          particle.classList.add('special-particle');
        }
        
        // –†–∞—Å–ø–æ–ª–∞–≥–∞–µ–º —á–∞—Å—Ç–∏—Ü—É –≤ —Ü–µ–Ω—Ç—Ä–µ —Å–µ—Ä–¥—Ü–∞
        particle.style.left = `${rect.left - gameRect.left + rect.width/2}px`;
        particle.style.top = `${rect.top - gameRect.top + rect.height/2}px`;
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–≤–∏–∂–µ–Ω–∏—è
        const angle = (i / particleCount) * Math.PI * 2;
        particle.style.setProperty('--angle', angle);
        
        // –î–æ–±–∞–≤–ª—è–µ–º —á–∞—Å—Ç–∏—Ü—É
        gameArea.appendChild(particle);
        
        // –£–¥–∞–ª—è–µ–º —á–∞—Å—Ç–∏—Ü—É –ø–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
        setTimeout(() => {
          if (particle.parentNode) {
            particle.parentNode.removeChild(particle);
          }
        }, 600);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —ç—Ñ—Ñ–µ–∫—Ç–∞ –∫–ª–∏–∫–∞:', error);
    }
  }
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–æ–¥–∞—Ä–∫–æ–≤
  function checkGiftUnlock(currentScore) {
    giftThresholds.forEach(threshold => {
      if (currentScore >= threshold.score && !unlockedGifts.includes(threshold.giftId)) {
        unlockedGifts.push(threshold.giftId);
        localStorage.setItem('unlockedGifts', JSON.stringify(unlockedGifts));
        showGiftUnlockNotification(threshold.title);
      }
    });
  }
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–µ –ø–æ–¥–∞—Ä–∫–∞
  function showGiftUnlockNotification(giftTitle) {
    try {
      // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
      const existingNotification = document.querySelector('.gift-unlock-notification');
      if (existingNotification) {
        existingNotification.remove();
      }
      
      const notification = document.createElement('div');
      notification.classList.add('gift-unlock-notification');
      notification.innerHTML = `
        <i class="fas fa-gift"></i>
        <p>–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ø–æ–¥–∞—Ä–æ–∫: <strong>${giftTitle}</strong>!</p>
      `;
      
      document.body.appendChild(notification);
      
      // –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –∑–≤—É–∫ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω)
      try {
        const context = new (window.AudioContext || window.webkitAudioContext)();
        const oscillator = context.createOscillator();
        const gain = context.createGain();
        
        oscillator.type = 'sine';
        oscillator.frequency.setValueAtTime(880, context.currentTime);
        oscillator.frequency.exponentialRampToValueAtTime(440, context.currentTime + 0.3);
        gain.gain.value = 0.1;
        
        oscillator.connect(gain);
        gain.connect(context.destination);
        
        oscillator.start();
        gain.gain.exponentialRampToValueAtTime(0.00001, context.currentTime + 1);
        
        setTimeout(() => {
          oscillator.stop();
        }, 1000);
      } catch (e) {
        console.log('–ó–≤—É–∫–æ–≤–æ–π —ç—Ñ—Ñ–µ–∫—Ç –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è');
      }
      
      setTimeout(() => {
        notification.classList.add('show');
      }, 100);
      
      setTimeout(() => {
        notification.classList.remove('show');
        setTimeout(() => {
          if (notification.parentNode) {
            notification.parentNode.removeChild(notification);
          }
        }, 500);
      }, 3000);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø–æ–¥–∞—Ä–∫–µ:', error);
    }
  }
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–≥—Ä—ã
  function endGame() {
    try {
      console.log('–ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞, —Å—á–µ—Ç:', score);
      isGameRunning = false;
      
      // –£–±–∏—Ä–∞–µ–º –∫–ª–∞—Å—Å "–º–∞–ª–æ –≤—Ä–µ–º–µ–Ω–∏"
      if (gameTimeDisplay) {
        gameTimeDisplay.classList.remove('time-running-out');
      }
      
      // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã
      clearInterval(gameInterval);
      clearInterval(heartCreateInterval);
      clearInterval(speedUpInterval);
      
      // –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–µ—Ä–¥—Ü–∞ —Å –ø–ª–∞–≤–Ω–æ–π –∞–Ω–∏–º–∞—Ü–∏–µ–π
      const existingHearts = gameArea.querySelectorAll('.game-heart');
      existingHearts.forEach(heart => {
        heart.classList.add('fade-out');
        setTimeout(() => {
          if (heart.parentNode) {
            heart.parentNode.removeChild(heart);
          }
        }, 300);
      });
      
      // –ü–ª–∞–≤–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –æ–∫–æ–Ω—á–∞–Ω–∏—è –∏–≥—Ä—ã
      if (gameEnd) {
        setTimeout(() => {
          gameEnd.classList.remove('hidden');
          setTimeout(() => {
            gameEnd.style.opacity = '1';
          }, 50);
        }, 500);
      }
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —ç–∫—Ä–∞–Ω–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –∏–≥—Ä—ã
      if (finalScoreDisplay) {
        // –ê–Ω–∏–º–∏—Ä—É–µ–º —Å—á–µ—Ç
        let displayScore = 0;
        const scoreInterval = setInterval(() => {
          displayScore = Math.min(displayScore + Math.max(1, Math.floor(score / 20)), score);
          finalScoreDisplay.textContent = displayScore;
          
          if (displayScore >= score) {
            clearInterval(scoreInterval);
            
            // –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –¥–ª—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å—á–µ—Ç–∞
            finalScoreDisplay.classList.add('score-highlight');
            setTimeout(() => {
              finalScoreDisplay.classList.remove('score-highlight');
            }, 1000);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–µ–∫–æ—Ä–¥, –µ—Å–ª–∏ —Ç–µ–∫—É—â–∏–π —Å—á–µ—Ç –≤—ã—à–µ
            if (score > recordScore) {
              recordScore = score;
              localStorage.setItem('loveGameRecord', recordScore);
              
              if (gameRecordDisplay) {
                gameRecordDisplay.textContent = recordScore;
                gameRecordDisplay.classList.add('new-record');
                setTimeout(() => {
                  gameRecordDisplay.classList.remove('new-record');
                }, 2000);
              }
              
              // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–º —Ä–µ–∫–æ—Ä–¥–µ
              const recordMessage = document.createElement('div');
              recordMessage.classList.add('new-record-message');
              recordMessage.textContent = '–ù–æ–≤—ã–π —Ä–µ–∫–æ—Ä–¥!';
              
              if (finalScoreDisplay.parentNode) {
                finalScoreDisplay.parentNode.appendChild(recordMessage);
                
                setTimeout(() => {
                  recordMessage.classList.add('show');
                }, 500);
                
                setTimeout(() => {
                  recordMessage.classList.remove('show');
                  setTimeout(() => {
                    if (recordMessage.parentNode) {
                      recordMessage.parentNode.removeChild(recordMessage);
                    }
                  }, 500);
                }, 3000);
              }
            }
            
            // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –Ω–∞–±—Ä–∞–Ω–Ω—ã–µ –æ—á–∫–∏ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–¥–∞—Ä–∫–∞—Ö
            showAvailableGifts(score);
          }
        }, 50);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –∏–≥—Ä—ã:', error);
    }
  }
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–¥–∞—Ä–∫–æ–≤
  function showAvailableGifts(currentScore) {
    try {
      // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –ø–æ–¥–∞—Ä–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å —Å —Ç–µ–∫—É—â–∏–º —Å—á–µ—Ç–æ–º
      const availableGifts = giftThresholds.filter(gift => currentScore >= gift.score);
      
      // –ï—Å–ª–∏ –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–¥–∞—Ä–∫–∏, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
      if (availableGifts.length > 0 && gameEnd) {
        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–¥–∞—Ä–∫–æ–≤
        const giftsMessage = document.createElement('div');
        giftsMessage.classList.add('available-gifts-message');
        
        // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –Ω–∞–∑–≤–∞–Ω–∏–π –ø–æ–¥–∞—Ä–∫–æ–≤
        const giftNames = availableGifts.map(gift => gift.title);
        const giftList = giftNames.join(', ');
        
        // –°–æ–∑–¥–∞–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        let messageText = `<p>–ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Ç–µ–±—è, <span class="pink-text">–∑–µ—Ñ–∏—Ä–æ—á–∫–∞ –º–æ—è</span>! –¢–µ–±–µ –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ–¥–∞—Ä–∫–∏: <strong>${giftList}</strong>.</p>`;
        messageText += `<p>–ó–∞–≥–ª—è–Ω–∏ –≤ —Ä–∞–∑–¥–µ–ª "–í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ –ø–æ–¥–∞—Ä–∫–∏", —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –∏—Ö!</p>`;
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —ç–∫—Ä–∞–Ω –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–≥—Ä—ã
        giftsMessage.innerHTML = messageText;
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –ø–æ–¥–∞—Ä–∫–∞–º
        const goToGiftsBtn = document.createElement('button');
        goToGiftsBtn.classList.add('btn-primary');
        goToGiftsBtn.innerHTML = '<i class="fas fa-gift"></i> –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–¥–∞—Ä–∫–∏';
        goToGiftsBtn.addEventListener('click', () => {
          // –ü–ª–∞–≤–Ω–æ —Å–∫—Ä–æ–ª–ª–∏–º –∫ —Å–µ–∫—Ü–∏–∏ —Å –ø–æ–¥–∞—Ä–∫–∞–º–∏
          const giftsSection = document.getElementById('virtual-gifts');
          if (giftsSection) {
            giftsSection.scrollIntoView({ behavior: 'smooth', block: 'start' });
            
            // –î–æ–±–∞–≤–ª—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç –≤—ã–¥–µ–ª–µ–Ω–∏—è –¥–ª—è —Å–µ–∫—Ü–∏–∏ –ø–æ–¥–∞—Ä–∫–æ–≤
            setTimeout(() => {
              giftsSection.classList.add('highlight-section');
              setTimeout(() => {
                giftsSection.classList.remove('highlight-section');
              }, 2000);
            }, 1000);
          }
        });
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –∫ —Å–æ–æ–±—â–µ–Ω–∏—é
        giftsMessage.appendChild(goToGiftsBtn);
        
        // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
        const existingMessage = gameEnd.querySelector('.available-gifts-message');
        if (existingMessage) {
          existingMessage.remove();
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —ç–∫—Ä–∞–Ω –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–≥—Ä—ã
        gameEnd.appendChild(giftsMessage);
        
        // –ê–Ω–∏–º–∏—Ä—É–µ–º –ø–æ—è–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        setTimeout(() => {
          giftsMessage.classList.add('show');
        }, 1000);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–¥–∞—Ä–∫–æ–≤:', error);
    }
  }
  
  // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è –∏–≥—Ä–æ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
  function addGameStyles() {
    console.log('–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–≤—ã—Ö —Å—Ç–∏–ª–µ–π');
    
    try {
      const styleElement = document.createElement('style');
      styleElement.textContent = `
        /* –°—Ç–∏–ª–∏ –¥–ª—è –∏–≥—Ä—ã */
        .game-started {
          animation: gameStartPulse 1s ease-in-out;
        }
        
        @keyframes gameStartPulse {
          0% { transform: scale(0.98); opacity: 0.9; }
          50% { transform: scale(1.02); opacity: 1; }
          100% { transform: scale(1); opacity: 1; }
        }
        
        .time-running-out {
          animation: timeWarning 0.5s infinite alternate;
          color: red !important;
        }
        
        @keyframes timeWarning {
          from { opacity: 0.6; }
          to { opacity: 1; transform: scale(1.1); }
        }
        
        /* –ê–Ω–∏–º–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—á–µ—Ç–∞ */
        .score-update {
          animation: scoreUpdate 0.3s ease-in-out;
        }
        
        @keyframes scoreUpdate {
          0% { transform: scale(1); }
          50% { transform: scale(1.3); color: #ff6b95; }
          100% { transform: scale(1); }
        }
        
        /* –°—Ç–∏–ª–∏ –¥–ª—è —Å–µ—Ä–¥–µ—á–µ–∫ */
        .game-heart {
          position: absolute;
          display: flex;
          justify-content: center;
          align-items: center;
          font-size: 30px;
          cursor: pointer;
          z-index: 200; /* –ü–æ–≤—ã—à–∞–µ–º z-index –¥–ª—è –≥–∞—Ä–∞–Ω—Ç–∏–∏ */
          user-select: none;
          will-change: transform, opacity, filter, top;
          transform-origin: center center;
          /* –ë–æ–ª—å—à–∞—è –æ–±–ª–∞—Å—Ç—å –∫–ª–∏–∫–∞ */
          padding: 20px;
          margin: -20px;
          box-sizing: content-box;
          transition: transform 0.15s ease-out, opacity 0.15s ease-out, filter 0.15s ease-out;
          animation: fall var(--fall-duration, 5s) linear forwards;
          -webkit-tap-highlight-color: transparent; /* –£–±–∏—Ä–∞–µ–º –ø–æ–¥—Å–≤–µ—Ç–∫—É –ø—Ä–∏ —Ç–∞–ø–µ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö */
          touch-action: manipulation; /* –£–ª—É—á—à–∞–µ–º –æ—Ç–∑—ã–≤—á–∏–≤–æ—Å—Ç—å –Ω–∞ —Å–µ–Ω—Å–æ—Ä–Ω—ã—Ö —ç–∫—Ä–∞–Ω–∞—Ö */
        }
        
        .game-heart::before {
          content: '';
          position: absolute;
          width: 100%;
          height: 100%;
          background-color: transparent;
          border-radius: 50%;
          z-index: -1;
        }
        
        .game-heart:hover {
          transform: scale(1.1);
          filter: brightness(1.2);
        }
        
        .game-heart.clicked {
          animation: pop 0.5s forwards !important;
          opacity: 1;
          filter: brightness(1.5);
        }
        
        /* –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ä–¥—Ü–∞ */
        .special-heart {
          font-size: 36px;
          filter: drop-shadow(0 0 10px rgba(255, 215, 0, 0.7));
          animation: fall var(--fall-duration, 8s) linear forwards, pulsateSpecial 1.2s infinite alternate;
        }
        
        .special-heart::before {
          background: radial-gradient(circle, rgba(255, 215, 0, 0.1) 0%, rgba(255, 215, 0, 0) 70%);
        }
        
        @keyframes pulsateSpecial {
          0% { transform: scale(1) rotate(var(--rotation, 0deg)); }
          100% { transform: scale(1.15) rotate(var(--rotation, 0deg)); }
        }
        
        /* –ë—ã—Å—Ç—Ä—ã–µ —Å–µ—Ä–¥—Ü–∞ */
        .quick-heart {
          font-size: 24px;
          filter: drop-shadow(0 0 5px rgba(0, 255, 170, 0.6));
          animation: fall var(--fall-duration, 3s) linear forwards, wiggle 0.3s infinite alternate;
        }
        
        .quick-heart::before {
          background: radial-gradient(circle, rgba(0, 255, 170, 0.1) 0%, rgba(0, 255, 170, 0) 70%);
        }
        
        @keyframes wiggle {
          0% { transform: translateX(-5px) rotate(calc(var(--rotation, 0deg) - 5deg)); }
          100% { transform: translateX(5px) rotate(calc(var(--rotation, 0deg) + 5deg)); }
        }
        
        /* –°—Ç–∏–ª–∏ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ –ø–∞–¥–µ–Ω–∏—è */
        @keyframes fall {
          0% { top: -60px; }
          100% { top: calc(100% + 20px); }
        }
        
        /* –°—Ç–∏–ª–∏ –¥–ª—è —á–∞—Å—Ç–∏—Ü –∏ —ç—Ñ—Ñ–µ–∫—Ç–æ–≤ */
        .heart-particle {
          position: absolute;
          width: 10px;
          height: 10px;
          border-radius: 50%;
          background-color: #ff6b95;
          pointer-events: none;
          z-index: 201;
        }
        
        .special-particle {
          background-color: gold;
          width: 12px;
          height: 12px;
          box-shadow: 0 0 5px gold;
        }
        
        .quick-particle {
          background-color: #00ffaa;
          width: 8px;
          height: 8px;
          box-shadow: 0 0 5px #00ffaa;
        }
        
        .points-animation {
          position: absolute;
          color: white;
          font-size: 1.5rem;
          font-weight: bold;
          text-shadow: 0 0 5px rgba(0, 0, 0, 0.5);
          z-index: 202;
          pointer-events: none;
          animation: floatUp 1s ease-out forwards;
        }
        
        .special-points {
          color: gold;
          font-size: 2rem;
          text-shadow: 0 0 8px rgba(255, 215, 0, 0.8);
        }
        
        .quick-points {
          color: #00ffaa;
          font-size: 1.7rem;
          text-shadow: 0 0 8px rgba(0, 255, 170, 0.7);
        }
        
        @keyframes floatUp {
          0% { transform: translateY(0); opacity: 1; }
          100% { transform: translateY(-60px); opacity: 0; }
        }
        
        @keyframes pop {
          0% { transform: scale(1); }
          50% { transform: scale(1.5); opacity: 1; }
          100% { transform: scale(0); opacity: 0; }
        }
        
        .heart-flash {
          position: absolute;
          width: 50px;
          height: 50px;
          border-radius: 50%;
          background: radial-gradient(circle, rgba(255, 107, 149, 0.8) 0%, transparent 70%);
          transform: translate(-50%, -50%);
          pointer-events: none;
          z-index: 201;
          animation: flash 0.5s ease-out forwards;
        }
        
        .special-flash {
          background: radial-gradient(circle, rgba(255, 215, 0, 0.8) 0%, transparent 70%);
          width: 70px;
          height: 70px;
        }
        
        .quick-flash {
          background: radial-gradient(circle, rgba(0, 255, 170, 0.8) 0%, transparent 70%);
          width: 40px;
          height: 40px;
          animation: flash 0.3s ease-out forwards;
        }
        
        @keyframes flash {
          0% { transform: translate(-50%, -50%) scale(0.5); opacity: 1; }
          100% { transform: translate(-50%, -50%) scale(2); opacity: 0; }
        }
        
        .new-record-message {
          color: gold;
          font-size: 2rem;
          font-weight: bold;
          margin-top: 20px;
          text-shadow: 0 0 10px rgba(255, 215, 0, 0.8);
          opacity: 0;
          transform: scale(0.8);
          transition: opacity 0.5s, transform 0.5s;
        }
        
        .new-record-message.show {
          opacity: 1;
          transform: scale(1);
        }
        
        .score-highlight {
          animation: scoreHighlight 1s ease-in-out;
        }
        
        @keyframes scoreHighlight {
          0% { color: white; }
          50% { color: gold; text-shadow: 0 0 10px gold; transform: scale(1.2); }
          100% { color: white; }
        }
        
        /* –ê–Ω–∏–º–∞—Ü–∏—è –≤—ã—Å–≤–µ—Ç–ª–µ–Ω–∏—è —Å–µ–∫—Ü–∏–∏ */
        .highlight-section {
          animation: sectionHighlight 2s;
        }
        
        @keyframes sectionHighlight {
          0% { background-color: transparent; }
          30% { background-color: rgba(255, 107, 149, 0.2); }
          100% { background-color: transparent; }
        }
        
        /* –°—Ç–∏–ª–∏ –¥–ª—è –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç–∏ */
        @media (max-width: 768px) {
          .game-heart {
            font-size: 26px;
            padding: 15px;
            margin: -15px;
          }
          
          .special-heart {
            font-size: 32px;
          }
          
          .quick-heart {
            font-size: 22px;
          }
          
          .points-animation {
            font-size: 1.3rem;
          }
          
          .special-points {
            font-size: 1.8rem;
          }
          
          .quick-points {
            font-size: 1.5rem;
          }
        }
      `;
      
      document.head.appendChild(styleElement);
      console.log('–ò–≥—Ä–æ–≤—ã–µ —Å—Ç–∏–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã');
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∏–≥—Ä–æ–≤—ã—Ö —Å—Ç–∏–ª–µ–π:', error);
    }
  }
  
  // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏
  addGameStyles();
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫
  console.log('–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫ –∫–Ω–æ–ø–∫–∞–º –∏–≥—Ä—ã');
  
  // –ö–Ω–æ–ø–∫–∞ —Å—Ç–∞—Ä—Ç–∞ –∏–≥—Ä—ã
  if (startGameBtn) {
    console.log('–î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ start-game');
    
    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç, —á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –≤—Å–µ —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    const newBtn = startGameBtn.cloneNode(true);
    if (startGameBtn.parentNode) {
      startGameBtn.parentNode.replaceChild(newBtn, startGameBtn);
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –∫–Ω–æ–ø–∫—É
    const updatedStartBtn = document.getElementById('start-game');
    
    if (updatedStartBtn) {
      // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
      updatedStartBtn.addEventListener('click', function(e) {
        console.log('–ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ start-game');
        e.preventDefault();
        
        // –≠—Ñ—Ñ–µ–∫—Ç –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏
        this.classList.add('button-click');
        setTimeout(() => {
          this.classList.remove('button-click');
        }, 200);
        
        startGame();
      });
      
      // –î–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏ –¥–æ–±–∞–≤–ª—è–µ–º –ø—Ä—è–º–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ onclick
      updatedStartBtn.onclick = function(e) {
        console.log('–ü—Ä—è–º–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ onclick –¥–ª—è start-game');
        e.preventDefault();
        startGame();
        return false;
      };
    }
  }
  
  // –ö–Ω–æ–ø–∫–∞ —Ä–µ—Å—Ç–∞—Ä—Ç–∞ –∏–≥—Ä—ã
  if (restartGameBtn) {
    console.log('–î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ restart-game');
    
    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç, —á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –≤—Å–µ —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    const newRestartBtn = restartGameBtn.cloneNode(true);
    if (restartGameBtn.parentNode) {
      restartGameBtn.parentNode.replaceChild(newRestartBtn, restartGameBtn);
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –∫–Ω–æ–ø–∫—É
    const updatedRestartBtn = document.getElementById('restart-game');
    
    if (updatedRestartBtn) {
      // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
      updatedRestartBtn.addEventListener('click', function(e) {
        console.log('–ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ restart-game');
        e.preventDefault();
        
        // –≠—Ñ—Ñ–µ–∫—Ç –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏
        this.classList.add('button-click');
        setTimeout(() => {
          this.classList.remove('button-click');
        }, 200);
        
        startGame();
      });
      
      // –î–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏ –¥–æ–±–∞–≤–ª—è–µ–º –ø—Ä—è–º–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ onclick
      updatedRestartBtn.onclick = function(e) {
        console.log('–ü—Ä—è–º–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ onclick –¥–ª—è restart-game');
        e.preventDefault();
        startGame();
        return false;
      };
    }
  }
  
  // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–æ–∫ —á–µ—Ä–µ–∑ –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π
  const gameContainer = document.getElementById('love-game');
  if (gameContainer) {
    gameContainer.addEventListener('click', function(e) {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ –∫–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∞—á–∞–ª–∞ –∏–ª–∏ —Ä–µ—Å—Ç–∞—Ä—Ç–∞
      if (e.target && (e.target.id === 'start-game' || e.target.id === 'restart-game' || 
                      (e.target.parentNode && (e.target.parentNode.id === 'start-game' || e.target.parentNode.id === 'restart-game')))) {
        console.log('–ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ —á–µ—Ä–µ–∑ –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ:', e.target.id || e.target.parentNode.id);
        e.preventDefault();
        startGame();
      }
    });
  }
  
  // –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é startGame –≤ –≥–ª–æ–±–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
  window.startGame = startGame;
  
  // –ß–µ—Ä–µ–∑ –∫–æ—Ä–æ—Ç–∫–∏–π —Ç–∞–π–º–∞—É—Ç –ø—Ä–æ–±—É–µ–º –∑–∞–ø—É—Å—Ç–∏—Ç—å –∏–≥—Ä—É –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
  setTimeout(() => {
    console.log('–ü—Ä–æ–±—É–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å –∏–≥—Ä—É –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...');
    if (gameStart && !gameStart.classList.contains('hidden') && !isGameRunning) {
      startGame();
    }
  }, 3000);
  
  console.log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª—é–±–æ–≤–Ω–æ–π –∏–≥—Ä—ã –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
  return startGame; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ–≥–æ —Ä—É—á–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é
window.initLoveGame = initLoveGame; 